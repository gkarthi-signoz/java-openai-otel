/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/9.1.0/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)

    // OpenAI Java SDK
    implementation("com.openai:openai-java:1.1.1")

    // dotenv-java
    implementation("io.github.cdimascio:dotenv-java:3.0.0")

    // --- OpenTelemetry Core + SDK ---
    implementation("io.opentelemetry:opentelemetry-api:1.54.1")
    implementation("io.opentelemetry:opentelemetry-sdk:1.54.1")
    implementation("io.opentelemetry:opentelemetry-sdk-trace:1.54.1")

    // --- Exporters ---
    implementation("io.opentelemetry:opentelemetry-exporter-otlp:1.54.1")      // OTLP gRPC + HTTP exporter
    implementation("io.opentelemetry:opentelemetry-exporter-logging:1.54.1")   // Logging exporter (prints spans)

    // --- Semantic Conventions ---
    implementation("io.opentelemetry:opentelemetry-semconv:1.27.0-alpha")

    // --- OpenTelemetry Instrumentation (OpenAI client wrapper) ---
    implementation(platform("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom-alpha:2.20.1-alpha"))
    implementation("io.opentelemetry.instrumentation:opentelemetry-openai-java-1.1")

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = "org.example.App"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
